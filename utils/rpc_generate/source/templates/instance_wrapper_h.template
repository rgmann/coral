#ifndef <%comp_guard%>_WRAPPER_H
#define <%comp_guard%>_WRAPPER_H

#include "InstanceWrapper.h"
#include "<%nspace%>.pb.h"

class <%wrapped_class%>Wrapper : public liber::rpc::InstanceWrapper {
public:

<%tab%><%wrapped_class%>Wrapper();
<%tab%>~<%wrapped_class%>Wrapper();

<%tab%>bool initialize(const std::string& params);
<%tab%>bool destroy(const std::string& params);

<%tab%>static void <%delegates%>Delegate(InstanceWrapper *pInst, const std::string& input, std::string& output, liber::rpc::RpcException&);


private:

<%tab%><%actions%>


private:

<%tab%>// TODO: Add additional instance variables here.
};

#endif // <%comp_guard%>_WRAPPER_H
