#ifndef <%comp_guard%>_SERVER_STUB_H
#define <%comp_guard%>_SERVER_STUB_H

#include "RpcServerResource.h"
#include "<%wrapped_class%>Wrapper.h"

struct <%wrapped_class%>HookCb;
class <%wrapped_class%>ServerStub : public liber::rpc::RpcServerResource {
public:

<%tab%><%wrapped_class%>ServerStub();
<%tab%>~<%wrapped_class%>ServerStub();

<%tab%>virtual void registerActions();

<%tab%>typedef void (*<%wrapped_class%>Hook)(<%wrapped_class%>Wrapper*, void*);
<%tab%>bool registerCtorHook(<%wrapped_class%>Hook pFunc, void* pUserData = NULL);
<%tab%>bool registerDtorHook(<%wrapped_class%>Hook pFunc, void* pUserData = NULL);

protected:
   
<%tab%>liber::rpc::InstanceWrapper* createInstance();

<%tab%>bool tugCtorHook(liber::rpc::InstanceWrapper* pInst);
<%tab%>bool tugDtorHook(liber::rpc::InstanceWrapper* pInst);

private:

<%tab%>struct <%wrapped_class%>HookCb* mpCreateHook;
<%tab%>struct <%wrapped_class%>HookCb* mpDestroyHook;
};

#endif // <%comp_guard%>_SERVER_STUB_H
