// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculator.proto

#ifndef PROTOBUF_calculator_2eproto__INCLUDED
#define PROTOBUF_calculator_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rpctest {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_calculator_2eproto();
void protobuf_AssignDesc_calculator_2eproto();
void protobuf_ShutdownFile_calculator_2eproto();

class CalculatorAddIn;
class CalculatorAddOut;
class CalculatorSubIn;
class CalculatorSubOut;
class CalculatorMulIn;
class CalculatorMulOut;
class CalculatorDivIn;
class CalculatorDivOut;
class CalculatorGetNumOpsIn;
class CalculatorGetNumOpsOut;

// ===================================================================

class CalculatorAddIn : public ::google::protobuf::Message {
 public:
  CalculatorAddIn();
  virtual ~CalculatorAddIn();

  CalculatorAddIn(const CalculatorAddIn& from);

  inline CalculatorAddIn& operator=(const CalculatorAddIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorAddIn& default_instance();

  void Swap(CalculatorAddIn* other);

  // implements Message ----------------------------------------------

  CalculatorAddIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorAddIn& from);
  void MergeFrom(const CalculatorAddIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::int32 first() const;
  inline void set_first(::google::protobuf::int32 value);

  // required int32 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorAddIn)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 first_;
  ::google::protobuf::int32 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorAddIn* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorAddOut : public ::google::protobuf::Message {
 public:
  CalculatorAddOut();
  virtual ~CalculatorAddOut();

  CalculatorAddOut(const CalculatorAddOut& from);

  inline CalculatorAddOut& operator=(const CalculatorAddOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorAddOut& default_instance();

  void Swap(CalculatorAddOut* other);

  // implements Message ----------------------------------------------

  CalculatorAddOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorAddOut& from);
  void MergeFrom(const CalculatorAddOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorAddOut)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorAddOut* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorSubIn : public ::google::protobuf::Message {
 public:
  CalculatorSubIn();
  virtual ~CalculatorSubIn();

  CalculatorSubIn(const CalculatorSubIn& from);

  inline CalculatorSubIn& operator=(const CalculatorSubIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorSubIn& default_instance();

  void Swap(CalculatorSubIn* other);

  // implements Message ----------------------------------------------

  CalculatorSubIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorSubIn& from);
  void MergeFrom(const CalculatorSubIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::int32 first() const;
  inline void set_first(::google::protobuf::int32 value);

  // required int32 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorSubIn)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 first_;
  ::google::protobuf::int32 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorSubIn* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorSubOut : public ::google::protobuf::Message {
 public:
  CalculatorSubOut();
  virtual ~CalculatorSubOut();

  CalculatorSubOut(const CalculatorSubOut& from);

  inline CalculatorSubOut& operator=(const CalculatorSubOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorSubOut& default_instance();

  void Swap(CalculatorSubOut* other);

  // implements Message ----------------------------------------------

  CalculatorSubOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorSubOut& from);
  void MergeFrom(const CalculatorSubOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorSubOut)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorSubOut* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorMulIn : public ::google::protobuf::Message {
 public:
  CalculatorMulIn();
  virtual ~CalculatorMulIn();

  CalculatorMulIn(const CalculatorMulIn& from);

  inline CalculatorMulIn& operator=(const CalculatorMulIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorMulIn& default_instance();

  void Swap(CalculatorMulIn* other);

  // implements Message ----------------------------------------------

  CalculatorMulIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorMulIn& from);
  void MergeFrom(const CalculatorMulIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::int32 first() const;
  inline void set_first(::google::protobuf::int32 value);

  // required int32 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorMulIn)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 first_;
  ::google::protobuf::int32 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorMulIn* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorMulOut : public ::google::protobuf::Message {
 public:
  CalculatorMulOut();
  virtual ~CalculatorMulOut();

  CalculatorMulOut(const CalculatorMulOut& from);

  inline CalculatorMulOut& operator=(const CalculatorMulOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorMulOut& default_instance();

  void Swap(CalculatorMulOut* other);

  // implements Message ----------------------------------------------

  CalculatorMulOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorMulOut& from);
  void MergeFrom(const CalculatorMulOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorMulOut)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorMulOut* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorDivIn : public ::google::protobuf::Message {
 public:
  CalculatorDivIn();
  virtual ~CalculatorDivIn();

  CalculatorDivIn(const CalculatorDivIn& from);

  inline CalculatorDivIn& operator=(const CalculatorDivIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorDivIn& default_instance();

  void Swap(CalculatorDivIn* other);

  // implements Message ----------------------------------------------

  CalculatorDivIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorDivIn& from);
  void MergeFrom(const CalculatorDivIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::int32 first() const;
  inline void set_first(::google::protobuf::int32 value);

  // required int32 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorDivIn)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 first_;
  ::google::protobuf::int32 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorDivIn* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorDivOut : public ::google::protobuf::Message {
 public:
  CalculatorDivOut();
  virtual ~CalculatorDivOut();

  CalculatorDivOut(const CalculatorDivOut& from);

  inline CalculatorDivOut& operator=(const CalculatorDivOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorDivOut& default_instance();

  void Swap(CalculatorDivOut* other);

  // implements Message ----------------------------------------------

  CalculatorDivOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorDivOut& from);
  void MergeFrom(const CalculatorDivOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorDivOut)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorDivOut* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorGetNumOpsIn : public ::google::protobuf::Message {
 public:
  CalculatorGetNumOpsIn();
  virtual ~CalculatorGetNumOpsIn();

  CalculatorGetNumOpsIn(const CalculatorGetNumOpsIn& from);

  inline CalculatorGetNumOpsIn& operator=(const CalculatorGetNumOpsIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorGetNumOpsIn& default_instance();

  void Swap(CalculatorGetNumOpsIn* other);

  // implements Message ----------------------------------------------

  CalculatorGetNumOpsIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorGetNumOpsIn& from);
  void MergeFrom(const CalculatorGetNumOpsIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorGetNumOpsIn)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorGetNumOpsIn* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorGetNumOpsOut : public ::google::protobuf::Message {
 public:
  CalculatorGetNumOpsOut();
  virtual ~CalculatorGetNumOpsOut();

  CalculatorGetNumOpsOut(const CalculatorGetNumOpsOut& from);

  inline CalculatorGetNumOpsOut& operator=(const CalculatorGetNumOpsOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorGetNumOpsOut& default_instance();

  void Swap(CalculatorGetNumOpsOut* other);

  // implements Message ----------------------------------------------

  CalculatorGetNumOpsOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorGetNumOpsOut& from);
  void MergeFrom(const CalculatorGetNumOpsOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpctest.CalculatorGetNumOpsOut)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_calculator_2eproto();
  friend void protobuf_AssignDesc_calculator_2eproto();
  friend void protobuf_ShutdownFile_calculator_2eproto();

  void InitAsDefaultInstance();
  static CalculatorGetNumOpsOut* default_instance_;
};
// ===================================================================


// ===================================================================

// CalculatorAddIn

// required int32 first = 1;
inline bool CalculatorAddIn::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorAddIn::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorAddIn::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorAddIn::clear_first() {
  first_ = 0;
  clear_has_first();
}
inline ::google::protobuf::int32 CalculatorAddIn::first() const {
  return first_;
}
inline void CalculatorAddIn::set_first(::google::protobuf::int32 value) {
  set_has_first();
  first_ = value;
}

// required int32 second = 2;
inline bool CalculatorAddIn::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalculatorAddIn::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalculatorAddIn::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalculatorAddIn::clear_second() {
  second_ = 0;
  clear_has_second();
}
inline ::google::protobuf::int32 CalculatorAddIn::second() const {
  return second_;
}
inline void CalculatorAddIn::set_second(::google::protobuf::int32 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// CalculatorAddOut

// required int32 result = 1;
inline bool CalculatorAddOut::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorAddOut::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorAddOut::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorAddOut::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CalculatorAddOut::result() const {
  return result_;
}
inline void CalculatorAddOut::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CalculatorSubIn

// required int32 first = 1;
inline bool CalculatorSubIn::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorSubIn::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorSubIn::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorSubIn::clear_first() {
  first_ = 0;
  clear_has_first();
}
inline ::google::protobuf::int32 CalculatorSubIn::first() const {
  return first_;
}
inline void CalculatorSubIn::set_first(::google::protobuf::int32 value) {
  set_has_first();
  first_ = value;
}

// required int32 second = 2;
inline bool CalculatorSubIn::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalculatorSubIn::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalculatorSubIn::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalculatorSubIn::clear_second() {
  second_ = 0;
  clear_has_second();
}
inline ::google::protobuf::int32 CalculatorSubIn::second() const {
  return second_;
}
inline void CalculatorSubIn::set_second(::google::protobuf::int32 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// CalculatorSubOut

// required int32 result = 1;
inline bool CalculatorSubOut::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorSubOut::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorSubOut::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorSubOut::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CalculatorSubOut::result() const {
  return result_;
}
inline void CalculatorSubOut::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CalculatorMulIn

// required int32 first = 1;
inline bool CalculatorMulIn::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorMulIn::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorMulIn::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorMulIn::clear_first() {
  first_ = 0;
  clear_has_first();
}
inline ::google::protobuf::int32 CalculatorMulIn::first() const {
  return first_;
}
inline void CalculatorMulIn::set_first(::google::protobuf::int32 value) {
  set_has_first();
  first_ = value;
}

// required int32 second = 2;
inline bool CalculatorMulIn::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalculatorMulIn::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalculatorMulIn::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalculatorMulIn::clear_second() {
  second_ = 0;
  clear_has_second();
}
inline ::google::protobuf::int32 CalculatorMulIn::second() const {
  return second_;
}
inline void CalculatorMulIn::set_second(::google::protobuf::int32 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// CalculatorMulOut

// required int32 result = 1;
inline bool CalculatorMulOut::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorMulOut::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorMulOut::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorMulOut::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CalculatorMulOut::result() const {
  return result_;
}
inline void CalculatorMulOut::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CalculatorDivIn

// required int32 first = 1;
inline bool CalculatorDivIn::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorDivIn::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorDivIn::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorDivIn::clear_first() {
  first_ = 0;
  clear_has_first();
}
inline ::google::protobuf::int32 CalculatorDivIn::first() const {
  return first_;
}
inline void CalculatorDivIn::set_first(::google::protobuf::int32 value) {
  set_has_first();
  first_ = value;
}

// required int32 second = 2;
inline bool CalculatorDivIn::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CalculatorDivIn::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CalculatorDivIn::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CalculatorDivIn::clear_second() {
  second_ = 0;
  clear_has_second();
}
inline ::google::protobuf::int32 CalculatorDivIn::second() const {
  return second_;
}
inline void CalculatorDivIn::set_second(::google::protobuf::int32 value) {
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// CalculatorDivOut

// required int32 result = 1;
inline bool CalculatorDivOut::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorDivOut::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorDivOut::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorDivOut::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CalculatorDivOut::result() const {
  return result_;
}
inline void CalculatorDivOut::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CalculatorGetNumOpsIn

// -------------------------------------------------------------------

// CalculatorGetNumOpsOut

// required int32 result = 1;
inline bool CalculatorGetNumOpsOut::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorGetNumOpsOut::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorGetNumOpsOut::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorGetNumOpsOut::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CalculatorGetNumOpsOut::result() const {
  return result_;
}
inline void CalculatorGetNumOpsOut::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpctest

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_calculator_2eproto__INCLUDED
